Environment Interface :-

    It is a interface present inside spring core framework.
    example-
    import org.springframework.core.env.Environment;

What Does Environment Do?
    The Environment interface allows you to access properties from:

    1) application.properties or application.yml
    2) System properties (e.g., JAVA_HOME)
    3) Environment variables

exmaple :-

Suppose if you want to read which java version is present in your system or you using then we can read that using Environment.

Controller.class :-
_________________

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api") // Optional: Group endpoints under "/api"
public class DemoController {

    @Autowired
    private Environment environment; // Corrected injection

    // ✅ It will give you java version
    @GetMapping("/java-version")
    public ResponseEntity<String> getJavaVersion() {
        String javaOptions = environment.getProperty("_JAVA_OPTIONS", "Not Found");
        return ResponseEntity.status(HttpStatus.OK).body(javaOptions);
    }

    // ✅ It will give you maven version
    @GetMapping("/maven-version")
    public ResponseEntity<String> getMavenVersion() {
        String mavenHome = environment.getProperty("MAVEN_HOME", "Not Found");
        return ResponseEntity.status(HttpStatus.OK).body(mavenHome);
    }
}

Note :-  Here .getProperty() is method of the Enviroment interface which helps you to read enviromental configuration of your system
______



